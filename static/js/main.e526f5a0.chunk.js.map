{"version":3,"sources":["components/film/Film.module.css","components/similar/Similar.module.css","api/api.js","components/film/Film.js","components/search/Search.js","components/info/search.svg","components/similar/Similar.js","components/info/Info.js","components/App.js","reportWebVitals.js","index.js","components/info/Info.module.css","components/search/Search.module.css"],"names":["module","exports","inst","axios","create","baseURL","headers","method","api","getFilmsByName","name","request","url","params","q","then","res","data","catch","err","console","error","getOverviewDetails","id","tconst","getRatings","getVideos","getImages","getPlots","getSimilar","length","slice","Film","props","imageUrl","i","className","style","wrapper","to","img","src","alt","inner","header","linkTo","title","l","rating","info","genre","y","globe","otherRating","label","rank","globes","awards","wins","loses","SwiperCore","use","Pagination","withRouter","useState","isSending","setIsSending","inputValue","setInputValue","filmsList","setFilmsList","hasError","setHasError","notFound","setNotFound","history","useHistory","useEffect","match","push","films","map","el","progress","first","inputWrapper","placeholder","input","type","onChange","e","target","value","btn","onClick","preventDefault","data1","undefined","d","film","data2","ratings","otherRanks","genres","data3","win","lose","resource","forEach","isWinner","awardName","filter","swiper","pagination","clickable","spaceBetween","slidesPerView","onSlideChange","activeIndex","newFilms","video","width","height","frameBorder","allow","allowFullScreen","Similar","wrap","useRef","toggle","onMouseEnter","current","classList","add","open","active","onMouseLeave","remove","image","ref","titleType","year","images","setImages","setFilm","similar","setSimilar","obj","log","max","max_id","cnt","plots","text","plot","sim","similarAll","nav","linkHome","search","empty","smallInfo","watchBtn","href","alert","lastP","bgImg","shadow","tail","content","footer","App","path","component","Search","Info","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e526f5a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Film_wrapper__3Py3w\",\"header\":\"Film_header__3d35g\",\"inner\":\"Film_inner__3QU9s\",\"img\":\"Film_img__1AY8H\",\"title\":\"Film_title__2rVkS\",\"info\":\"Film_info__8z09H\",\"rating\":\"Film_rating__2-HnB\",\"globe\":\"Film_globe__2HEXp\",\"awards\":\"Film_awards__1X12w\",\"linkTo\":\"Film_linkTo__3BgX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Similar_wrapper___VRE8\",\"open\":\"Similar_open__3Khw-\",\"toggle\":\"Similar_toggle__2skGv\",\"rating\":\"Similar_rating__3HIhw\",\"active\":\"Similar_active__1IBdQ\"};","import axios from \"axios\"\n\nconst inst = axios.create({\n    baseURL: \"https://imdb8.p.rapidapi.com/\",\n    headers: {\n        'x-rapidapi-key': '3bd9821c43msh3d8d144ef02f038p14c79ejsne9fdc4de02a6',\n        'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n    },\n    method: 'GET'\n})\n\nconst api = {\n    getFilmsByName (name) {\n        return inst.request({\n            url: \"title/auto-complete\",\n            params: {q: name}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getOverviewDetails (id) {\n        return inst.request({\n            url: \"title/get-overview-details\",\n            params: {tconst: id}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getRatings (id) {\n        return inst.request({\n            url: \"title/get-awards\",\n            params: {tconst: id}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getVideos (id) {\n        return inst.request({\n            url: \"title/get-videos\",\n            params: {tconst: id}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getImages (id) {\n        return inst.request({\n            url: \"title/get-images\",\n            params: {tconst: id}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getPlots (id) {\n        return inst.request({\n            url: \"title/get-plots\",\n            params: {tconst: id}\n        })\n            .then(res => res.data)\n            .catch(err => console.error(err))\n    },\n    getSimilar (id) {\n        return inst.request({\n            url: \"title/get-more-like-this\",\n            params: {tconst: id}\n        })\n            .then(res => {\n                let ans\n                if (res.data.length > 4) {\n                    ans = res.data.slice(0, 4)\n                } else ans = res.data\n                return ans\n            })\n            .catch(err => console.error(err))\n    }\n}\n\nexport default api","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport style from \"./Film.module.css\"\n\nconst Film = (props) => {\n    let imageUrl\n\n    if (props.i) {\n        imageUrl = props.i.imageUrl\n    } else {\n        imageUrl = \"https://bytes.ua/wp-content/uploads/2017/08/no-image.png\"\n    }\n\n    return (\n        <div className={style.wrapper}>\n            <NavLink to={`info/${props.id}`}>\n                <img className={style.img} src={imageUrl} alt=\"\"/>\n            </NavLink>\n            <div className={style.inner}>\n                <div className={style.header}>\n                    <NavLink className={style.linkTo} to={`/info/${props.id}`}>\n                        <h3 className={style.title}>{props.l}</h3>\n                    </NavLink>\n                    <div className={style.rating}>\n                        <p>IMDb {props.rating || \"?\"}</p>\n                    </div>\n                </div>\n                <div className={style.info}>\n                    <p>{props.q || \"?\"}</p>\n                    <p>|</p>\n                    <p>{props.genre || \"?\"}</p>\n                    <p>|</p>\n                    <p>{props.y || \"?\"}</p>\n                </div>\n                <hr/>\n                <div className={style.globe}>\n                    {props.otherRating ?\n                        <>\n                            <p>{props.otherRating.label} #{props.otherRating.rank}</p>\n                            <p>|</p>\n                            <p>Won {props.globes} Golden Globes.</p>\n                        </>\n                        :\n                        \"\"\n                    }\n                </div>\n                <div className={style.awards}>\n                    <p>Another {props.wins} wins & {props.loses} nominations</p>\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Film","import React, {useState, useEffect} from \"react\";\nimport {withRouter, useHistory} from \"react-router-dom\"\n\nimport style from \"./Search.module.css\"\nimport api from \"../../api/api\";\nimport Film from \"../film/Film\";\nimport SwiperCore, {Pagination} from 'swiper';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport \"swiper/swiper.min.css\";\nimport 'swiper/components/pagination/pagination.min.css';\n\nSwiperCore.use([Pagination]);\n\n\nconst Search = (props) => {\n    const [isSending, setIsSending] = useState(false)\n    const [inputValue, setInputValue] = useState(\"\")\n    const [filmsList, setFilmsList] = useState([])\n    const [hasError, setHasError] = useState(false)\n    const [notFound, setNotFound] = useState(false)\n\n\n    let history = useHistory()\n\n    useEffect(() => {\n        if (props.match.params.name) {\n            setInputValue(props.match.params.name)\n            history.push(\"/\")\n            // click()\n        }\n    }, [])\n\n\n    let valueChanged = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    let click = (e) => {\n        if (e) e.preventDefault()\n\n        if (!inputValue) {\n            setHasError(true)\n        } else {\n            setHasError(false)\n            setIsSending(true)\n            api.getFilmsByName(inputValue)\n                .then((data1 => {\n                    if (data1.d !== undefined) {\n                        setNotFound(false)\n                        let film = data1.d[0]\n                        if (film.id.slice(0, 2) === \"tt\") {\n                            api.getOverviewDetails(film.id)\n                                .then((data2) => {\n                                    if (data2.ratings.otherRanks) {\n                                        let rating = data2.ratings.otherRanks[0]\n                                        film.otherRating = {\n                                            label: rating.label,\n                                            rank: rating.rank\n                                        }\n                                    }\n                                    data2.genres ?\n                                        film.genre = data2.genres[0] :\n                                        film.genre = \"?\"\n                                    film.rating = data2.ratings.rating\n                                    api.getRatings(film.id)\n                                        .then(data3 => {\n                                            let win = 0\n                                            let lose = 0\n                                            let globe = 0\n                                            let awards = data3.resource.awards\n                                            if (awards) {\n                                                awards.forEach(el => {\n                                                    if (el.isWinner) {\n                                                        if (el.awardName === \"Golden Globe\") globe++\n                                                        else win++\n                                                    } else lose++\n                                                })\n                                            }\n                                            film.globes = globe\n                                            film.wins = win\n                                            film.loses = lose\n                                            setFilmsList(data1.d)\n                                            setIsSending(false)\n                                        })\n                                })\n                        } else {\n                            let films = data1.d.filter(el => el.id.slice(0, 2) === \"tt\")\n                            setFilmsList(films)\n                            setIsSending(false)\n                        }\n                    } else {\n                        setNotFound(true)\n                        setIsSending(false)\n                    }\n                }))\n        }\n    }\n\n    let slideChanged = (swiper) => {\n        setIsSending(true)\n        let film = filmsList[swiper.activeIndex]\n        api.getOverviewDetails(film.id)\n            .then((data) => {\n                let newFilms = [...filmsList]\n                if (data.ratings.otherRanks) {\n                    let rating = data.ratings.otherRanks[0]\n                    newFilms[swiper.activeIndex].otherRating = {\n                        label: rating.label,\n                        rank: rating.rank\n                    }\n                }\n                data.genres ?\n                    newFilms[swiper.activeIndex].genre = data.genres[0] :\n                    newFilms[swiper.activeIndex].genre = \"?\"\n\n                newFilms[swiper.activeIndex].rating = data.ratings.rating\n                api.getRatings(film.id)\n                    .then(data1 => {\n                        let win = 0\n                        let lose = 0\n                        let globe = 0\n                        let awards = data1.resource.awards\n                        if (awards) {\n                            awards.forEach(el => {\n                                if (el.isWinner) {\n                                    if (el.awardName === \"Golden Globe\") globe++\n                                    else win++\n                                } else lose++\n                            })\n                        }\n                        newFilms[swiper.activeIndex].globes = globe\n                        newFilms[swiper.activeIndex].wins = win\n                        newFilms[swiper.activeIndex].loses = lose\n                        setFilmsList(newFilms)\n                        setIsSending(false)\n                    })\n            })\n    }\n\n\n    let films\n\n\n    films = filmsList.map(el => {\n        return (\n            <SwiperSlide>\n                <Film {...el}/>\n            </SwiperSlide>\n        )\n    })\n\n    return (\n\n        <div className={`${style.wrapper} ${isSending ? style.progress : \"\"}`}>\n            <h1 className={`${style.title} ${style.first}`}>Unlimited movies,</h1>\n            <h1 className={style.title}>TV shows, and more.</h1>\n            <h2 className={style.info}>Watch anywhere. Cancel anytime.</h2>\n            <div className={style.inputWrapper}>\n                <input placeholder=\"Type here smth...\" className={`${style.input} ${isSending ? style.progress : \"\"}`}\n                       type=\"text\" onChange={valueChanged} value={inputValue}/>\n                <button className={`${style.btn} ${isSending ? style.progress : \"\"}`} onClick={click}>Search</button>\n            </div>\n            {hasError ? <p className={style.error}>You cannot send an empty string</p> : \"\"}\n            {notFound ? <p className={style.error}>Nothing found</p> : \"\"}\n            <div className={style.swiper}>\n                <Swiper\n                    pagination={{clickable: true}}\n                    spaceBetween={10}\n                    slidesPerView={1}\n                    onSlideChange={slideChanged}>\n                    {films}\n                </Swiper>\n            </div>\n            <iframe className={style.video} width=\"100%\" height=\"100%\"\n                    src=\"https://www.youtube.com/embed/gA0nQyDZR4A?start=20&controls=0&showinfo=0&rel=0&autoplay=1&loop=1&mute=1&disablekb=1\"\n                    title=\"YouTube video player\" frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen/>\n        </div>\n    )\n}\n\nexport default withRouter(Search)","export default __webpack_public_path__ + \"static/media/search.34ef3c35.svg\";","import React, {useRef} from \"react\"\nimport style from \"./Similar.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\nconst Similar = (props) => {\n    let wrap = useRef()\n    let toggle = useRef()\n\n    let enter = (e) => {\n        if (wrap.current) {\n            wrap.current.classList.add(style.open)\n            toggle.current.classList.add(style.active)\n        }\n    }\n\n    let leave = (e) => {\n        if (wrap.current) {\n            wrap.current.classList.remove(style.open)\n            toggle.current.classList.remove(style.active)\n\n        }\n    }\n\n    return (\n        <NavLink to={`/info/${props.id.slice(7, -1)}`}>\n            <div className={style.wrapper} onMouseEnter={enter} onMouseLeave={leave}>\n                <img src={props.title.image.url} alt=\"\" ref={wrap}/>\n                <div className={style.toggle} ref={toggle}>\n                    <h2>{props.title.title}</h2>\n                    <p>{props.genres[0]}</p>\n                    <p>{props.title.titleType} {props.title.year}</p>\n                    <div className={style.rating}>\n                        <p>IMDb {props.ratings.rating || \"?\"}</p>\n                    </div>\n                </div>\n            </div>\n        </NavLink>\n    )\n}\n\nexport default Similar","import React, {useEffect, useState} from \"react\"\nimport style from \"./Info.module.css\"\nimport {NavLink, withRouter} from \"react-router-dom\"\nimport api from \"../../api/api\";\nimport search from \"./search.svg\"\nimport Similar from \"../similar/Similar\";\n\nconst Info = (props) => {\n    const [images, setImages] = useState([])\n    const [film, setFilm] = useState({})\n    const [isSending, setIsSending] = useState(false)\n    const [similar, setSimilar] = useState([])\n    const [inputValue, setInputValue] = useState(\"\")\n\n\n    let valueChanged = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    useEffect(() => {\n        let id = props.match.params.id\n        setIsSending(true)\n        api.getOverviewDetails(id)\n            .then(data => {\n                let obj = {}\n                if (data.ratings.otherRanks) {\n                    let rating = data.ratings.otherRanks[0]\n                    obj.otherRating = {\n                        label: rating.label,\n                        rank: rating.rank\n                    }\n                }\n                obj.title = data.title.title\n                obj.titleType = data.title.titleType\n                obj.year = data.title.year\n                data.genres ? obj.genre = data.genres[0] : obj.genre = \"?\"\n                obj.rating = data.ratings.rating\n                api.getImages(id)\n                    .then(data => {\n                        setImages(data.images)\n                        api.getRatings(id)\n                            .then(data => {\n                                let win = 0\n                                let lose = 0\n                                let globe = 0\n                                let awards = data.resource.awards\n                                if (awards) {\n                                    awards.forEach(el => {\n                                        if (el.isWinner) {\n                                            if (el.awardName === \"Golden Globe\") globe++\n                                            else win++\n                                        } else lose++\n                                    })\n                                }\n                                obj.globes = globe\n                                obj.wins = win\n                                obj.loses = lose\n                                console.log(id)\n                                api.getPlots(id)\n                                    .then(data => {\n                                        let max = 0\n                                        let max_id = -1\n                                        let cnt = 0\n                                        if (data.plots) {\n                                            data.plots.forEach(el => {\n                                                if (el.text.length > max) {\n                                                    max = el.text.length\n                                                    max_id = cnt\n                                                }\n                                                cnt++\n                                            })\n                                        }\n                                        if (data.plots[max_id]) obj.plot = data.plots[max_id].text\n                                        else obj.plot = \"No description\"\n                                        api.getSimilar(id)\n                                            .then(data => {\n                                                let sim = []\n                                                let cnt = 1\n                                                data.forEach(el => {\n                                                    api.getOverviewDetails(el.slice(7, -1))\n                                                        .then(data1 => {\n                                                            sim.push(data1)\n                                                            console.log(cnt, data.length)\n\n                                                            if (cnt === data.length) {\n                                                                setSimilar(sim)\n                                                                setFilm(obj)\n                                                                setIsSending(false)\n                                                            }\n                                                            cnt++\n                                                        })\n                                                })\n                                            })\n                                    })\n                            })\n                    })\n\n            })\n    }, [props.match.params.id])\n\n    let similarAll = similar.map(el => <Similar {...el}/>)\n\n    console.log(similar)\n\n    return (\n        <>\n            <div className={style.wrapper}>\n                <div className={style.nav}>\n                    <NavLink to=\"/\" className={style.linkHome}>\n                        <h1>Richbee Shows</h1>\n                    </NavLink>\n                    <div className={style.input}>\n                        <input placeholder=\"Type here smth...\" type=\"text\" onChange={valueChanged}/>\n                        <NavLink to={`/home/${inputValue}`}><img src={search} alt=\"search\"/></NavLink>\n                    </div>\n                </div>\n                {isSending ?\n                    <div className={style.empty}/>\n                    :\n                    <div className={style.info}>\n                        <div className={style.inner}>\n                            <h1>{film.title}</h1>\n                            <div className={style.smallInfo}>\n                                <div className={style.rating}>\n                                    <p>IMDb {film.rating || \"?\"}</p>\n                                </div>\n                                <p>{film.genre}</p>\n                                <p>|</p>\n                                <p>{film.titleType}</p>\n                                <p>|</p>\n                                <p>{film.year}</p>\n                            </div>\n                            <a className={style.watchBtn} href=\"#\" onClick={() => alert(\"К сожалению я не смог найти ссылку на трейлер из их апишки 😔\")}>Watch</a>\n                            <div className={style.awards}>\n                                <p>{film.otherRating ? film.otherRating.label : \"\"}\n                                    #{film.otherRating ? film.otherRating.rank : \"\"}</p>\n                                <p>|</p>\n                                <p>Won {film.globes} Golden Globes</p>\n                            </div>\n                            <p className={style.lastP}>Another {film.wins} wins & {film.loses} nominations</p>\n                        </div>\n                        <img className={style.bgImg} src={images[0] ? images[0].url : \"\"} alt=\"\"/>\n                        <div className={style.shadow}/>\n                    </div>\n                }\n\n            </div>\n            <div className={style.tail}>\n                <div className={style.content}>\n                    <h1>Watch {film.title} on Richbee Shows</h1>\n                    <p>{film.plot}</p>\n                    <h2>You may also like</h2>\n                    <div className={style.similar}>\n                        {similarAll}\n                    </div>\n                </div>\n            </div>\n            <div className={style.footer}>\n                <h3>Richbee Shows</h3>\n            </div>\n        </>\n    )\n}\n\n\nexport default withRouter(Info)","import './App.css';\nimport Search from \"./search/Search\";\nimport {Route, Switch} from \"react-router\";\nimport Info from \"./info/Info\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch>\n            <Route path=\"/home/:name\" component={Search}/>\n            <Route path=\"/info/:id\" component={Info}/>\n            <Route exact path=\"/\" component={Search}/>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Info_wrapper__2ebEr\",\"linkHome\":\"Info_linkHome__3FsO2\",\"nav\":\"Info_nav__2actj\",\"input\":\"Info_input__qYfKm\",\"bgImg\":\"Info_bgImg__2PP7q\",\"shadow\":\"Info_shadow__1TysQ\",\"info\":\"Info_info__32qsa\",\"empty\":\"Info_empty__2kOOK\",\"inner\":\"Info_inner__2wIzj\",\"smallInfo\":\"Info_smallInfo__18732\",\"rating\":\"Info_rating__34IFW\",\"watchBtn\":\"Info_watchBtn__2mOTJ\",\"awards\":\"Info_awards__YOVQX\",\"lastP\":\"Info_lastP__2H_vO\",\"tail\":\"Info_tail__4MTn0\",\"content\":\"Info_content__1u0aU\",\"similar\":\"Info_similar__k8Sru\",\"footer\":\"Info_footer__3IMll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__2fjP3\",\"progress\":\"Search_progress__pyDMJ\",\"title\":\"Search_title__3XjIz\",\"first\":\"Search_first__2mlsp\",\"video\":\"Search_video__2x_gO\",\"info\":\"Search_info__qO0XI\",\"inputWrapper\":\"Search_inputWrapper__2j8Mj\",\"input\":\"Search_input__K2AWf\",\"btn\":\"Search_btn__3YWzp\",\"swiper\":\"Search_swiper__3_w0d\",\"arrL\":\"Search_arrL__1jRiy\",\"arrR\":\"Search_arrR__2Wv6Q\",\"error\":\"Search_error__32p8q\"};"],"sourceRoot":""}